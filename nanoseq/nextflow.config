/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/nanoseq Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Options: Mandatory
    input                      = './samplesheet.csv'
    protocol                   = null

    // Options: Demultiplexing
    input_path                 = null
    flowcell                   = null
    kit                        = null
    barcode_kit                = null
    barcode_both_ends          = false
    trim_barcodes              = false
    guppy_config               = null
    guppy_model                = null
    guppy_gpu                  = false
    guppy_gpu_runners          = 6
    guppy_cpu_threads          = 1
    gpu_device                 = 'auto'
    gpu_cluster_options        = null
    output_demultiplex_fast5   = false
    qcat_min_score             = 60
    qcat_detect_middle         = false
    skip_basecalling           = false
    skip_demultiplexing        = false

    // Options: Raw read cleaning
    nanolyse_fasta             = null
    run_nanolyse               = false

    // Options: Alignment
    aligner                    = 'minimap2'
    stranded                   = false
    save_align_intermeds       = false
    skip_alignment             = false

    // Options: DNA variant calling
    call_variants              = false
    variant_caller             = 'medaka'
    structural_variant_caller  = 'sniffles'
    split_mnps                 = false
    phase_vcf                  = false
    skip_vc                    = false
    skip_sv                    = false
    deepvariant_gpu            = false

    // Options: Visualisation
    skip_bigbed                = false
    skip_bigwig                = false

    // Options: Quantification and differential analysis
    quantification_method      = 'bambu'
    skip_quantification        = false
    skip_differential_analysis = false

    // Options: RNA modification analysis
    skip_modification_analysis = false
    skip_xpore                 = false
    skip_m6anet                = false

    // Options: RNA fusion analysis
    skip_fusion_analysis = false
    jaffal_ref_dir       = null

    // Options: QC
    skip_qc                    = false
    skip_pycoqc                = false
    skip_nanoplot              = false
    skip_fastqc                = false
    skip_multiqc               = false

    // Options: Config
    multiqc_config             = null

    // Options: Custom config
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null

    // Options: Other
    help                       = false
    outdir                     = './results'
    igenomes_base              = 's3://ngi-igenomes/igenomes/' //note
    igenomes_ignore            = false //note
    max_multiqc_email_size     = '25.MB' //note
    multiqc_title              = null //note
    tracedir                   = "${params.outdir}/pipeline_info"
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    help                       = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'
    enable_conda               = false

    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        params.enable_conda    = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    podman {
        podman.enabled         = true
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    shifter {
        shifter.enabled        = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
    }
    charliecloud {
        charliecloud.enabled   = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
    test_bc_nodx             { includeConfig 'conf/test_bc_nodx.config'             }
    test_nobc_dx             { includeConfig 'conf/test_nobc_dx.config'             }
    test_nobc_nodx_stringtie { includeConfig 'conf/test_nobc_nodx_stringtie.config' }
    test_nobc_nodx_noaln     { includeConfig 'conf/test_nobc_nodx_noaln.config'     }
    test_nobc_nodx_vc        { includeConfig 'conf/test_nobc_nodx_vc.config'        }
    test_nobc_nodx_rnamod    { includeConfig 'conf/test_nobc_nodx_rnamod.config'    }
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/nanoseq'
    author          = 'Chelsea Sawyer, Yuk Kei Wan'
    homePage        = 'https://github.com/nf-core/nanoseq'
    description     = 'A pipeline to demultiplex, QC and map Nanopore data'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=21.10.3'
    version         = '3.0.0'
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
