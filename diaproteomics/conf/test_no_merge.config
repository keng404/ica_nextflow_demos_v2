/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/diaproteomics -profile test,<docker/singularity>
 */

params {
  config_profile_name = 'Test profile'
  config_profile_description = 'Minimal test dataset to check pipeline function'
  // Limit resources so that this can run on GitHub Actions
  max_cpus = 2
  max_memory = 6.GB
  max_time = 48.h

  // be aware these parameters should not be taken for real size DIA data
  // here shown parameters are only valid for the tiny CI test data-set of the DIAproteomics workflow
  pyprophet_global_fdr_level = 'peptide'
  pyprophet_peakgroup_fdr = 1
  pyprophet_peptide_fdr = 1
  pyprophet_protein_fdr = 1
  pyprophet_pi0_start = 0
  pyprophet_pi0_end = 0
  pyprophet_pi0_steps = 0
  dialignr_global_align_fdr = 1
  dialignr_analyte_fdr = 1
  dialignr_unalign_fdr = 1
  dialignr_align_fdr = 1
  dialignr_query_fdr = 1
  generate_spectral_library = true
  min_overlap_for_merging = 10
  generate_pseudo_irts = true
  n_irts = 25 
  irt_min_bins_covered = 1
  generate_plots = false
  run_msstats = false
  force_option = true

  // Input data
  input_sheet_dda = 'https://raw.githubusercontent.com/nf-core/test-datasets/diaproteomics/dda_sheet_no_merge.tsv'
  input = 'https://raw.githubusercontent.com/nf-core/test-datasets/diaproteomics/sample_sheet.tsv'
  unimod = 'https://raw.githubusercontent.com/nf-core/test-datasets/diaproteomics/unimod.xml'
}
