/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: GUNZIP_GTF {
        publishDir = [
            enabled: false
        ]
    }

    withName: GTF_TO_TABLE {
        publishDir = [
            enabled: false
        ]
        ext.args = "--feature-type transcript"
    }

    withName: VALIDATOR {
        publishDir = [
            enabled: false
        ]
        ext.args = "--sample_id_col '${params.observations_id_col}' --feature_id_col '${params.features_id_col}'"
    }

    withName: DESEQ2_DIFFERENTIAL {
        publishDir = [
            [
                path: { "${params.outdir}/tables/differential" },
                mode: params.publish_dir_mode,
                pattern: '*.deseq2.results.tsv'
            ],
            [
                path: { "${params.outdir}/tables/processed_counts" },
                mode: params.publish_dir_mode,
                pattern: '*.{normalised_counts,vst,rlog}.tsv'
            ],
            [
                path: { "${params.outdir}/plots/qc" },
                mode: params.publish_dir_mode,
                pattern: '*.png'
            ],
            [
                path: { "${params.outdir}/tables/deseq2_other" },
                mode: params.publish_dir_mode,
                pattern: '*.{rds,sizefactors.tsv,sessionInfo.log}'
            ]
        ]
        ext.args = { [
            "--sample_id_col \"${params.observations_id_col}\"",
            "--test $params.deseq2_test",
            "--fit_type $params.deseq2_fit_type",
            "--sf_type $params.deseq2_sf_type",
            "--min_replicates_for_replace $params.deseq2_min_replicates_for_replace",
            "--use_t $params.deseq2_use_t",
            "--lfc_threshold $params.deseq2_lfc_threshold",
            "--alt_hypothesis $params.deseq2_alt_hypothesis",
            "--independent_filtering $params.deseq2_independent_filtering",
            "--p_adjust_method $params.deseq2_p_adjust_method",
            "--alpha $params.deseq2_alpha",
            "--minmu $params.deseq2_minmu",
            "--vs_method $params.deseq2_vs_method",
            "--vs_blind $params.deseq2_vs_blind",
            "--vst_nsub $params.deseq2_vst_nsub",
            "--shrink_lfc $params.deseq2_shrink_lfc",
            "--cores $params.deseq2_cores",
            "--contrast_variable \"$meta.variable\"",
            "--reference_level \"$meta.reference\"",
            "--treatment_level \"$meta.target\"",
            "--blocking_variables \"$meta.blocking\""
        ].join(' ').trim() }
    }

    withName: GSEA_GSEA {
        ext.prefix = { "${meta.id}." }
        publishDir = [
            [
                path: { "${params.outdir}/tables/gsea/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: '*gsea_report_for_*.tsv'
            ],
            [
                path: { "${params.outdir}/plots/gsea/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: '*.png'
            ]
        ]
        ext.args = { [
            "-nperm $params.gsea_nperm",
            "-permute $params.gsea_permute",
            "-scoring_scheme $params.gsea_scoring_scheme",
            "-metric $params.gsea_metric",
            "-sort $params.gsea_sort",
            "-order $params.gsea_order",
            "-set_max $params.gsea_set_max",
            "-set_min $params.gsea_set_min",
            "-norm $params.gsea_norm",
            "-rnd_type $params.gsea_rnd_type",
            "-make_sets $params.gsea_make_sets",
            "-median $params.gsea_median",
            "-num $params.gsea_num",
            "-plot_top_x $params.gsea_plot_top_x",
            "-rnd_seed $params.gsea_rnd_seed",
            "-save_rnd_lists $params.gsea_save_rnd_lists",
            "-zip_report $params.gsea_zip_report"
        ].join(' ').trim() }
    }

    withName: PLOT_EXPLORATORY {
        publishDir = [
            path: { "${params.outdir}/plots/exploratory" },
            mode: params.publish_dir_mode,
        ]
        memory = { check_max( 12.GB * task.attempt, 'memory'  ) }
        ext.args = { [
            "--sample_id_col \"${params.observations_id_col}\"",
            "--feature_id_col \"${params.features_id_col}\"",
            "--assay_names raw,normalised,variance_stabilised",
            "--final_assay variance_stabilised",
            "--outlier_mad_threshold ${params.exploratory_mad_threshold}"
        ].join(' ').trim() }
    }

    withName: PLOT_DIFFERENTIAL {
        publishDir = [
            path: { "${params.outdir}/plots/differential" },
            mode: params.publish_dir_mode,
        ]
        memory = { check_max( 12.GB * task.attempt, 'memory'  ) }
        ext.args = { [
            "--feature_id_col \"${params.features_id_col}\"",
            "--reference_level \"$meta.reference\"",
            "--treatment_level \"$meta.target\"",
            "--fold_change_col \"${params.differential_fc_column}\"",
            "--p_value_column \"${params.differential_qval_column}\"",
            "--diff_feature_id_col \"${params.differential_feature_id_column}\"",
            "--fold_change_threshold \"${params.differential_min_fold_change}\"",
            "--p_value_threshold \"${params.differential_max_qval}\"",
            "--unlog_foldchanges \"${params.differential_foldchanges_logged}\""
        ].join(' ').trim() }
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: RMARKDOWNNOTEBOOK {
        conda = "bioconda::r-shinyngs=1.5.3"
        container = { "${ workflow.containerEngine == 'singularity' && !task.ext.singularity_pull_docker_container ? 'https://depot.galaxyproject.org/singularity/r-shinyngs%3A1.5.3--r42hdfd78af_0':'quay.io/biocontainers/r-shinyngs:1.5.3--r42hdfd78af_0' }" }
        publishDir = [
            path: { "${params.outdir}/report" },
            mode: params.publish_dir_mode,
            pattern: '*.html'
        ]
    }

    withName: CUSTOM_MATRIXFILTER {
        publishDir = [
            enabled: false
        ]
        ext.prefix = { "${meta.id}" }
        ext.args   = [
            "--minimum_samples ${params.filtering_min_samples}",
            "--minimum_abundance ${params.filtering_min_abundance}",
            params.filtering_min_proportion ? "--minimum_proportion ${params.filtering_min_proportion}" : '',
            params.filtering_grouping_var ? "--grouping_variable ${filtering_grouping_var}" : ''
        ].join(' ').trim()
    }

    withName: 'CUSTOM_TABULARTOGSEACLS' {
        publishDir = [
            enabled: false
        ]
        ext.args = { [ "separator": "\t", "variable": "$meta.variable" ] }
    }

    withName: 'CUSTOM_TABULARTOGSEAGCT' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'TABULAR_TO_GSEA_CHIP' {
        publishDir = [
            enabled: false
        ]
    }
}
