{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/differentialabundance/master/nextflow_schema.json",
    "title": "nf-core/differentialabundance pipeline parameters",
    "description": "Differential abundance analysis",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "input",
                "contrasts",
                "matrix",
                "outdir",
                "study_name",
                "study_type",
                "report_file",
                "logo_file",
                "css_file"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.(csv|tsv|txt)$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/differentialabundance/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "contrasts": {
                    "type": "string",
                    "description": "A CSV file describing sample contrasts",
                    "help_text": "This file is used to define groups of samples from 'input' to compare.  It must contain at least the columns 'variable', 'reference', 'target' and 'blocking', where 'variable' is a column in the input sample sheet, 'reference' and 'target' are values in that column, and blocking is a colon-separated list of additional 'blocking' variables (can be an empty string)",
                    "pattern": "^\\S+\\.csv$",
                    "format": "file-path",
                    "mimetype": "text/csv"
                },
                "matrix": {
                    "type": "string",
                    "description": "TSV-format abundance matrix",
                    "help_text": "For example an expression matrix output from the nf-core/rnaseq workflow. There must be a column in this matrix for every row in the input sample sheet.",
                    "format": "file-path",
                    "mimetype": "text/tab-separated-values",
                    "pattern": "^\\S+\\.(tsv|csv|txt)$"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "study_name": {
                    "type": "string",
                    "default": "study",
                    "description": "A string to identify results in the output directory",
                    "help_text": "Also used as an identifier in some processes"
                },
                "study_type": {
                    "type": "string",
                    "default": "rnaseq",
                    "description": "A string identifying the technology used to produce the data",
                    "help_text": "Currently only 'rnaseq' may be specified. In future options like 'affy_array' are possible.",
                    "enum": ["rnaseq"]
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "control_features": {
                    "type": "string",
                    "description": "A text file listing technical features (e.g. spikes)",
                    "help_text": "One feature per row. Note that by default these features will just be stripped from matrices prior to internal processing. To actually use them in e.g. normalisation, set `--sizefactors_from_controls`",
                    "format": "file-path",
                    "mimetype": "text/plain"
                },
                "sizefactors_from_controls": {
                    "type": "boolean",
                    "help_text": "Use supplied control features in normalistion/ scaling operations?",
                    "description": "When set, use the control features in scaling/ normalisation"
                },
                "report_file": {
                    "type": "string",
                    "description": "Rmd report template from which to create the pipeline report",
                    "format": "file-path",
                    "pattern": "^\\S+\\.Rmd$"
                },
                "logo_file": {
                    "type": "string",
                    "default": "docs/images/nf-core-differentialabundance_logo_light.png",
                    "description": "A logo to display in the report instead of the generic pipeline logo"
                },
                "css_file": {
                    "type": "string",
                    "default": "assets/nf-core_style.css",
                    "description": "CSS to use to style the output, in lieu of the default nf-core styling"
                },
                "citations_file": {
                    "type": "string",
                    "default": "CITATIONS.md",
                    "description": "A markdown file containing citations to include in the fiinal report"
                }
            }
        },
        "observations_options": {
            "title": "Observations (e.g. samples) options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "observations_id_col": {
                    "type": "string",
                    "default": "sample",
                    "description": "Column in the samples sheet to be used as the primary sample identifier"
                },
                "observations_type": {
                    "type": "string",
                    "default": "sample",
                    "description": "Type of observation",
                    "help_text": "This is used in reporting to refer to the observations. Frequently this is 'sample' (e.g. in RNA-seq experiments), but it may also be desirable to refer to 'pool', or 'individual'."
                }
            },
            "required": ["observations_id_col", "observations_type"]
        },
        "features_options": {
            "title": "Features options",
            "type": "object",
            "description": "Options related to features",
            "default": "",
            "help_text": "",
            "properties": {
                "features_id_col": {
                    "type": "string",
                    "default": "gene_id",
                    "description": "Feature ID attribute in the GTF file (e.g. the gene_id field)"
                },
                "features_name_col": {
                    "type": "string",
                    "default": "gene_name",
                    "description": "Feature name attribute in the GTF file (e.g. the gene symbol field)"
                },
                "features_type": {
                    "type": "string",
                    "default": "gene",
                    "description": "Type of feature we have, often 'gene'"
                }
            },
            "required": ["features_id_col", "features_name_col", "features_type"]
        },
        "filtering": {
            "title": "Filtering",
            "type": "object",
            "description": "Options related to filtering upstream of differential analysis",
            "default": "",
            "properties": {
                "filtering_min_abundance": {
                    "type": "integer",
                    "default": 1,
                    "description": "Minimum abundance value"
                },
                "filtering_min_samples": {
                    "type": "number",
                    "default": 1,
                    "description": "Minimum observations that must pass the threshold to retain the row/ feature (e.g. gene)."
                },
                "filtering_min_proportion": {
                    "type": "number",
                    "description": "A minimum proportion of observations, given as a number between 0 and 1, that must pass the threshold. Overrides  minimum_samples"
                },
                "filtering_grouping_var": {
                    "type": "string",
                    "help_text": "The variable can be used to define groups and derive a minimum group size upon which to base minimum observation numbers. The rationale for this is to allow retention of features that might be present in only one group. Note that this is consciously NOT filtering with an explicit awareness of groups (\"feature must be present in all samples of group A\"), since this is known to create biases towards discovery of differential features.",
                    "description": "An optional grouping variable to be used to calculate a min_samples value"
                }
            },
            "fa_icon": "fas fa-filter",
            "required": ["filtering_min_abundance"]
        },
        "exploratory_analysis": {
            "title": "Exploratory analysis",
            "type": "object",
            "description": "Options related to data exploration",
            "default": "",
            "properties": {
                "exploratory_clustering_method": {
                    "type": "string",
                    "default": "ward.D2",
                    "description": "Clustering method used in dendrogram creation"
                },
                "exploratory_cor_method": {
                    "type": "string",
                    "default": "spearman",
                    "description": "Correlation method used in dendrogram creation"
                },
                "exploratory_n_features": {
                    "type": "integer",
                    "default": 500,
                    "description": "Number of features selected before certain exploratory analyses"
                },
                "exploratory_whisker_distance": {
                    "type": "number",
                    "default": 1.5,
                    "description": "Length of the whiskers in boxplots as multiple of IQR. Defaults to 1.5."
                },
                "exploratory_mad_threshold": {
                    "type": "integer",
                    "default": -5,
                    "help_text": "MAD = median absolute deviation. A threshold on this value is used to define observations (samples) as outliers, or not, in exploratory plots. Based on the definition at https://wiki.arrayserver.com/wiki/index.php?title=CorrelationQC.pdf. ",
                    "description": "Threshold on MAD score for outlier identification"
                },
                "exploratory_main_variable": {
                    "type": "string",
                    "default": "auto_pca",
                    "description": "How should the main grouping variable be selected? 'auto_pca', 'contrasts', or a valid column name from the observations table.",
                    "help_text": "Some plots are only generated once, with a single sample grouping, this option defines how that sample grouping is selected. It should be 'auto_pca' (variable selected from the sample sheet with the most association with the first principal component), 'contrasts' (pick the variable associated with the first contrast), or a value specifying a specific column in the observations."
                }
            },
            "fa_icon": "fas fa-chart-area",
            "required": [
                "exploratory_clustering_method",
                "exploratory_cor_method",
                "exploratory_n_features",
                "exploratory_main_variable"
            ]
        },
        "differential_analysis": {
            "title": "Differential analysis",
            "type": "object",
            "description": "Options related to differential operations",
            "default": "",
            "properties": {
                "differential_file_suffix": {
                    "type": "string",
                    "default": ".deseq2.results.tsv",
                    "description": "The suffix associated tabular differential results tables"
                },
                "differential_feature_id_column": {
                    "type": "string",
                    "default": "gene_id",
                    "description": "The feature identifier column in differential results tables"
                },
                "differential_fc_column": {
                    "type": "string",
                    "default": "log2FoldChange",
                    "description": "The fold change column in differential results tables"
                },
                "differential_pval_column": {
                    "type": "string",
                    "default": "pvalue",
                    "description": "The p value column in differential results tables"
                },
                "differential_qval_column": {
                    "type": "string",
                    "default": "padj",
                    "description": "The q value column in differential results tables."
                },
                "differential_min_fold_change": {
                    "type": "integer",
                    "default": 2,
                    "description": "Minimum fold change used to calculate differential feature numbers"
                },
                "differential_max_qval": {
                    "type": "number",
                    "default": 0.05,
                    "description": "Maximum q value used to calculate differential feature numbrers"
                },
                "differential_feature_name_column": {
                    "type": "string",
                    "default": "gene_name",
                    "description": "Where a features file (GTF) has been provided, what attributed to use to name features"
                },
                "differential_foldchanges_logged": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicate whether or not fold changes are on the log scale (default is to assume they are)"
                }
            },
            "required": [
                "differential_file_suffix",
                "differential_feature_id_column",
                "differential_fc_column",
                "differential_qval_column",
                "differential_min_fold_change",
                "differential_max_qval"
            ],
            "fa_icon": "fas fa-adjust"
        },
        "deseq2_specific_options_rna_seq_only": {
            "title": "DESeq2 specific options (RNA-seq only)",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "deseq2_test": {
                    "type": "string",
                    "default": "Wald",
                    "description": "`test` parameter passed to DESeq()",
                    "help_text": "either \"Wald\" or \"LRT\", which will then use either Wald significance tests (defined by nbinomWaldTest), or the likelihood ratio test on the difference in deviance between a full and reduced model formula (defined by nbinomLRT)",
                    "enum": ["Wald", "LRT"]
                },
                "deseq2_fit_type": {
                    "type": "string",
                    "default": "parametric",
                    "description": "`fitType` parameter passed to DESeq()",
                    "help_text": "either \"parametric\", \"local\", \"mean\", or \"glmGamPoi\" for the type of fitting of dispersions to the mean intensity. See estimateDispersions for description.",
                    "enum": ["parametric", "local", "mean", "glmGamPoi"]
                },
                "deseq2_sf_type": {
                    "type": "string",
                    "default": "ratio",
                    "description": "`sfType` parameter passed to DESeq()",
                    "help_text": "either \"ratio\", \"poscounts\", or \"iterate\" for the type of size factor estimation. See estimateSizeFactors for description.",
                    "enum": ["ratio", "poscounts", "iterate"]
                },
                "deseq2_min_replicates_for_replace": {
                    "type": "integer",
                    "default": 7,
                    "help_text": "the minimum number of replicates required in order to use replaceOutliers on a sample. If there are samples with so many replicates, the model will be refit after these replacing outliers, flagged by Cook's distance. Set to Inf in order to never replace outliers. It set to Inf for fitType=\"glmGamPoi\".",
                    "description": "'minReplicatesForReplace' parameter passed to DESeq()"
                },
                "deseq2_use_t": {
                    "type": "boolean",
                    "description": "`useT` parameter passed to DESeq2",
                    "help_text": "logical, passed to nbinomWaldTest, default is FALSE, where Wald statistics are assumed to follow a standard Normal"
                },
                "deseq2_independent_filtering": {
                    "type": "boolean",
                    "default": true,
                    "description": "`independentFiltering` parameter passed to results()",
                    "help_text": "logical, whether independent filtering should be applied automatically"
                },
                "deseq2_lfc_threshold": {
                    "type": "integer",
                    "default": 0,
                    "description": "`lfcThreshold` parameter passed to results()",
                    "help_text": "a non-negative value which specifies a log2 fold change threshold. The default value is 0, corresponding to a test that the log2 fold changes are equal to zero. The user can specify the alternative hypothesis using the altHypothesis argument, which defaults to testing for log2 fold changes greater in absolute value than a given threshold. If lfcThreshold is specified, the results are for Wald tests, and LRT p-values will be overwritten."
                },
                "deseq2_alt_hypothesis": {
                    "type": "string",
                    "default": "greaterAbs",
                    "description": "`altHypothesis` parameter passed to results()",
                    "help_text": "character which specifies the alternative hypothesis, i.e. those values of log2 fold change which the user is interested in finding. The complement of this set of values is the null hypothesis which will be tested. If the log2 fold change specified by 'name' or by contrast' is written as beta , then the possible values for 'altHypothesis' represent the following alternate hypotheses: 1) greaterAbs: |beta| > lfcThreshold , and p-values are two-tailed 2) lessAbs: |beta| < lfcThreshold , p-values are the maximum of the upper and lower tests. The Wald statistic given is positive, an SE-scaled distance from the closest boundary 3) greater: beta > lfcThreshold 4) less: beta < -lfcThreshold"
                },
                "deseq2_p_adjust_method": {
                    "type": "string",
                    "default": "BH",
                    "description": "`pAdjustMethod` parameter passed to results()",
                    "help_text": "the method to use for adjusting p-values, see help in R for the p.adjust() function (via ?p.adjust). At time of writing available values were \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"BY\", \"fdr\", \"none\"."
                },
                "deseq2_alpha": {
                    "type": "number",
                    "default": 0.1,
                    "description": "`alpha` parameter passed to results()",
                    "help_text": "the significance cutoff used for optimizing the independent filtering (by default 0.1). If the adjusted p-value cutoff (FDR) will be a value other than 0.1, alpha should be set to that value."
                },
                "deseq2_minmu": {
                    "type": "number",
                    "default": 0.5,
                    "description": "`minmu` parameter passed to results()",
                    "help_text": "lower bound on the estimated count (used when calculating contrasts)"
                },
                "deseq2_vs_method": {
                    "type": "string",
                    "default": "vst",
                    "description": "variance stabilisation method to use when making a variance stabilised matrix",
                    "help_text": "'rlog', 'vst' or 'rlog,vst'",
                    "enum": ["rlog", "vst", "rlog,vst"]
                },
                "deseq2_shrink_lfc": {
                    "type": "boolean",
                    "default": true,
                    "description": "Shink fold changes in results?",
                    "help_text": "'ashr' method is the only method currently implemented"
                },
                "deseq2_cores": {
                    "type": "integer",
                    "default": 1,
                    "description": "Number of cores",
                    "help_text": "Number of cores to use with DESeq()"
                },
                "deseq2_vs_blind": {
                    "type": "boolean",
                    "default": true,
                    "description": "`blind` parameter for rlog() and/ or vst()",
                    "help_text": "logical, whether to blind the transformation to the experimental design "
                },
                "deseq2_vst_nsub": {
                    "type": "integer",
                    "default": 1000,
                    "description": "`nsub` parameter passed to vst()",
                    "help_text": "the number of genes to subset to (default 1000)"
                }
            }
        },
        "gsea": {
            "title": "GSEA",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "gsea_run": {
                    "type": "boolean",
                    "description": "Set to run GSEA to infer differential gene sets in contrasts"
                },
                "gsea_permute": {
                    "type": "string",
                    "default": "phenotype",
                    "description": "Permutation type",
                    "help_text": "Select the type of permutation to perform in assessing the statistical significance of the enrichment score. (See 'required fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page for more info)",
                    "enum": ["phenotype", "gene_set"]
                },
                "gsea_nperm": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Number of permutations",
                    "help_text": "Specify the number of permutations to perform in assessing the statistical significance of the enrichment score. (See 'required fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page)"
                },
                "gsea_scoring_scheme": {
                    "type": "string",
                    "default": "weighted",
                    "description": "Enrichment statistic",
                    "enum": ["weighted", "weighted_p2", "weighted_p1.5", "classic"],
                    "help_text": "See 'basic fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page for a detailed explanation."
                },
                "gsea_metric": {
                    "type": "string",
                    "default": "Signal2Noise",
                    "enum": ["Signal2Noise", "tTest", "Ratio_of_Classes", "Diff_of_Classes", "log2_Ratio_of_Classes"],
                    "description": "Metric for ranking genes",
                    "help_text": "See https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideTEXT.htm#_Metrics_for_Ranking for a detailed explanation."
                },
                "gsea_sort": {
                    "type": "string",
                    "default": "real",
                    "description": "Gene list sorting mode",
                    "help_text": "GSEA ranks the genes in the expression dataset and then analyzes that ranked list of genes. Use this parameter to determine whether to sort the genes using the real (default) or absolute value of the ranking metric.\n\nSee 'basic fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page",
                    "enum": ["real", "absolute"]
                },
                "gsea_order": {
                    "type": "string",
                    "default": "descending",
                    "description": "Gene list ordering mode",
                    "help_text": "GSEA ranks the genes in the expression dataset and then analyzes that ranked list of genes. Use this parameter to determine whether to sort the genes in descending (default) or ascending order. Ascending order is usually applicable when the ranking metric is a measure of nearness (how close the genes are to one another) rather than distance.\n\nSee 'basic fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page",
                    "enum": ["descending", "ascending"]
                },
                "gsea_set_max": {
                    "type": "integer",
                    "default": 500,
                    "description": "Max size: exclude larger sets",
                    "help_text": "After filtering from the gene sets any gene not in the expression dataset, gene sets larger than this are excluded from the analysis.\n\nSee 'basic fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page"
                },
                "gsea_set_min": {
                    "type": "integer",
                    "default": 15,
                    "description": "Min size: exclude smaller sets",
                    "help_text": "After filtering from the gene sets any gene not in the expression dataset, gene sets smaller than this are excluded from the analysis.\n\nSee 'basic fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page"
                },
                "gsea_norm": {
                    "type": "string",
                    "default": "meandiv",
                    "description": "Normalisation mode",
                    "enum": ["meandiv", "none"],
                    "help_text": "Normalization mode. Method used to normalize the enrichment scores across analyzed gene sets: 'meandiv' (default, GSEA normalizes the enrichment scores as described in Normalized Enrichment Score (NES)) OR 'none' (GSEA does not normalize the enrichment scores).\n\nSee 'advanced fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page"
                },
                "gsea_rnd_type": {
                    "type": "string",
                    "default": "no_balance",
                    "help_text": "Method used to randomly assign phenotype labels to samples for phenotype permutations. Not used for gene_set  permutations.\n\nSee 'advanced fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page",
                    "enum": ["no_balance", "equalize_and_balance"],
                    "description": "Randomization mode"
                },
                "gsea_make_sets": {
                    "type": "boolean",
                    "default": true,
                    "description": "Make detailed geneset report?"
                },
                "gsea_median": {
                    "type": "boolean",
                    "help_text": "Set to true (default=false) to use the median of each class, instead of the mean, in the metrics for ranking for genes\n\nSee 'advanced fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page. ",
                    "description": "Use median for class metrics"
                },
                "gsea_num": {
                    "type": "integer",
                    "default": 100,
                    "description": "Number of markers",
                    "help_text": "Number of features (gene or probes) to include in the butterfly plot in the Gene Markers section of the gene set enrichment report.\n\nSee 'advanced fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page. "
                },
                "gsea_plot_top_x": {
                    "type": "integer",
                    "default": 20,
                    "description": "Plot graphs for the top sets of each phenotype",
                    "help_text": "Generates summary plots and detailed analysis results for the top x genes in each phenotype, where x is 20 by default. The top genes are those with the largest normalized enrichment scores.\n\nSee 'advanced fields' at https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html?Run_GSEA_Page. "
                },
                "gsea_rnd_seed": {
                    "type": "string",
                    "default": "timestamp",
                    "description": "Seed for permutation",
                    "help_text": "Seed used to generate a random number for phenotype and gene_set  permutations: timestamp (default), 149, or user input. The specific seed value (149) generates consistent results, which is useful when testing software."
                },
                "gsea_save_rnd_lists": {
                    "type": "boolean",
                    "description": "Save random ranked lists",
                    "help_text": "Set to 'true' (default=false) to save the random ranked lists of genes created by phenotype permutations. When you save random ranked lists, for each permutation, GSEA saves the rank metric score for each gene (the score used to position the gene in the ranked list). Saving random ranked lists is memory intensive; therefore, this parameter is set to false by default."
                },
                "gsea_zip_report": {
                    "type": "boolean",
                    "description": "Make a zipped file with all reports",
                    "help_text": "Set to True (default=false) to create a zip file of the analysis results. The zip file is saved to the output folder with all of the other files generated by the analysis. This is useful for sharing analysis results"
                },
                "gsea_gene_sets": {
                    "type": "string",
                    "default": "None",
                    "description": "Gene sets in GMT or GMX-format"
                }
            },
            "fa_icon": "fas fa-layer-group"
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "gtf": {
                    "type": "string",
                    "description": "Genome annotation file in GTF format",
                    "pattern": "^\\S+\\.gtf(\\.gz)?",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "help_text": "\"This parameter is *mandatory* if `--genome` is not specified.\""
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle"
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"]
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully."
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format"
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette"
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square"
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/observations_options"
        },
        {
            "$ref": "#/definitions/features_options"
        },
        {
            "$ref": "#/definitions/filtering"
        },
        {
            "$ref": "#/definitions/exploratory_analysis"
        },
        {
            "$ref": "#/definitions/differential_analysis"
        },
        {
            "$ref": "#/definitions/deseq2_specific_options_rna_seq_only"
        },
        {
            "$ref": "#/definitions/gsea"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
