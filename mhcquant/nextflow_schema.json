{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/mhcquant/master/nextflow_schema.json",
    "title": "nf-core/mhcquant pipeline parameters",
    "description": "Identify and quantify peptides from mass spectrometry raw data",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "description": "Input raw / mzML files listed in a tsv file (see help for details)",
                    "help_text": "Use this to specify a sample sheet table including your input raw or mzml files as well as their meta information such as SampleID and Condition. For example:\n\n| ID   | Sample      | Condition  |   ReplicateFileName                       |\n| -----|:------------:| ----------:|------------------------------------------:|\n| 1    | MM15_Melanom |      A     |   data/MM15_Melanom_W_1_A_standard.raw    |\n| 2    | MM15_Melanom |      B     |   data/MM15_Melanom_W_1_B_standard.raw    |\n| 3    | MM17_Melanom |      B     |   data/MM17_Melanom_W_1_B_standard.raw    |\n\n```bash\n--input 'path/samples.tsv'\n```",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.tsv$",
                    "schema": "assets/schema_input.json",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "database_options": {
            "title": "Database Options",
            "type": "object",
            "fa_icon": "fas fa-database",
            "description": "",
            "default": "",
            "properties": {
                "fasta": {
                    "type": "string",
                    "fa_icon": "fas fa-file-code",
                    "pattern": ".fasta$",
                    "description": "Input FASTA protein database",
                    "help_text": "If you have no genome reference available, the pipeline can build one using a FASTA file. This requires additional time and resources, so it's better to use a pre-build index if possible."
                },
                "include_proteins_from_vcf": {
                    "type": "boolean",
                    "fa_icon": "fas fa-file-code",
                    "description": "Set depending on whether variants should be translated to proteins and included into your fasta for database search."
                },
                "skip_decoy_generation": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Add this parameter when you want to skip the generation of the decoy database, the consequence is that it prevents the generation of variants and FDR refinement",
                    "help_text": "If you want to use your own decoys, you can specify a dataset that includes decoy sequences. However, each database entry should keep the prefix 'DECOY_'.\nOne should consider though that this option will then prevent appending variants to the database and if not using reversed decoys the subset refinement FDR option will not work."
                }
            }
        },
        "preprocessing": {
            "title": "Preprocessing",
            "type": "object",
            "fa_icon": "fas fa-microchip",
            "description": "",
            "default": "",
            "properties": {
                "pick_ms_levels": {
                    "type": "integer",
                    "fa_icon": "fas fa-layer-group",
                    "default": 2,
                    "description": "Specify the MS levels for which the peak picking is applied (unless you use `--run_centroidisation`)."
                },
                "run_centroidisation": {
                    "type": "boolean",
                    "fa_icon": "fas fa-border-center-v",
                    "default": false,
                    "description": "Include the flag when the specified ms level is not centroided (default=false). "
                }
            }
        },
        "mass_spectrometry_data_processing": {
            "title": "Mass Spectrometry Data Processing",
            "type": "object",
            "fa_icon": "fas fa-waveform-lines",
            "description": "",
            "default": "",
            "properties": {
                "peptide_min_length": {
                    "type": "integer",
                    "fa_icon": "fas fa-dash",
                    "default": 8,
                    "description": "Specify the minimum length of peptides to be considered after processing"
                },
                "peptide_max_length": {
                    "type": "integer",
                    "fa_icon": "fas fa-plus",
                    "default": 12,
                    "description": "Specify the maximum length of peptides to be considered after processing"
                },
                "fragment_mass_tolerance": {
                    "type": "number",
                    "default": 0.02,
                    "fa_icon": "fas fa-indent",
                    "description": "Specify the fragment mass tolerance to be used for the comet database search.",
                    "help_text": "For High-Resolution instruments a fragment mass tolerance value of 0.02 is recommended. (See the Comet parameter documentation: eg. 0.02)"
                },
                "precursor_mass_tolerance": {
                    "type": "integer",
                    "fa_icon": "fas fa-indent",
                    "default": 5,
                    "description": "Specify the precursor mass tolerance to be used for the comet database search.",
                    "help_text": " For High-Resolution instruments a precursor mass tolerance value of 5ppm is recommended. (eg. 5)"
                },
                "fragment_bin_offset": {
                    "type": "integer",
                    "fa_icon": "fas fa-indent",
                    "default": 0,
                    "description": "Specify the fragment bin offset to be used for the comet database search.",
                    "help_text": "For High-Resolution instruments a fragment bin offset of 0 is recommended. (See the Comet parameter documentation: eg. 0)"
                },
                "number_mods": {
                    "type": "integer",
                    "fa_icon": "fas fa-hashtag",
                    "default": 3,
                    "description": "Specify the maximum number of modifications that should be contained in a peptide sequence match."
                },
                "num_hits": {
                    "type": "integer",
                    "fa_icon": "fas fa-hashtag",
                    "default": 1,
                    "description": "Specify the number of hits that should be reported for each spectrum."
                },
                "digest_mass_range": {
                    "type": "string",
                    "fa_icon": "fas fa-chard-line",
                    "default": "800:2500",
                    "description": "Specify the mass range that peptides should fulfill to be considered for peptide spectrum matching."
                },
                "prec_charge": {
                    "type": "string",
                    "fa_icon": "fas fa-input-numeric",
                    "default": "2:3",
                    "description": "Specify the precursor charge range that peptides should fulfill to be considered for peptide spectrum matching."
                },
                "activation_method": {
                    "type": "string",
                    "fa_icon": "fas fa-file-code",
                    "default": "ALL",
                    "description": "Specify which fragmentation method was used in the MS acquisition",
                    "enum": ["ALL", "CID", "ECD", "ETD", "PQD", "HCD", "IRMPD"]
                },
                "enzyme": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "default": "unspecific cleavage",
                    "description": "Specify which enzymatic restriction should be applied",
                    "hidden": true,
                    "help_text": " for HLA peptides rarely other enzymes are used, however most enzymes such as for example 'Trypsin' are available (see OpenMS enzymes)"
                },
                "max_rt_alignment_shift": {
                    "type": "integer",
                    "fa_icon": "fas fa-slider",
                    "default": 300,
                    "description": "Set a maximum retention time shift for the linear rt alignment"
                },
                "fixed_mods": {
                    "type": "string",
                    "fa_icon": "fas fa-cubes-stacked",
                    "description": "Specify which fixed modifications should be applied to the database search",
                    "help_text": "e.g. 'Carbamidomethyl (C)' (see OpenMS modifications; for a list of options, see parameter description on https://abibuilder.informatik.uni-tuebingen.de/archive/openms/Documentation/nightly/html/TOPP_CometAdapter.html)"
                },
                "variable_mods": {
                    "type": "string",
                    "fa_icon": "fas fa-cubes-stacked",
                    "default": "Oxidation (M)",
                    "description": "Specify which variable modifications should be applied to the database search",
                    "help_text": "e.g. 'Oxidation (M)' (see OpenMS modifications; for a list of options, see parameter description on https://abibuilder.informatik.uni-tuebingen.de/archive/openms/Documentation/nightly/html/TOPP_CometAdapter.html)"
                },
                "use_x_ions": {
                    "type": "boolean",
                    "fa_icon": "fas fa-file-code",
                    "description": "Include x ions into the peptide spectrum matching"
                },
                "use_z_ions": {
                    "type": "boolean",
                    "fa_icon": "fas fa-file-code",
                    "description": "Include z ions into the peptide spectrum matching"
                },
                "use_a_ions": {
                    "type": "boolean",
                    "fa_icon": "fas fa-file-code",
                    "description": "Include a ions into the peptide spectrum matching"
                },
                "use_c_ions": {
                    "type": "boolean",
                    "fa_icon": "fas fa-file-code",
                    "description": "Include c ions into the peptide spectrum matching"
                },
                "use_NL_ions": {
                    "type": "boolean",
                    "fa_icon": "fas fa-file-code",
                    "description": "Include NL ions into the peptide spectrum matching"
                },
                "remove_precursor_peak": {
                    "type": "boolean",
                    "fa_icon": "fas fa-file-code",
                    "description": "Include if you want to remove all peaks around precursor m/z",
                    "default": false
                },
                "spectrum_batch_size": {
                    "type": "integer",
                    "fa_icon": "fas fa-wave-sine",
                    "default": 500,
                    "description": "Size of Spectrum batch for Comet processing (Decrease/Increase depending on Memory Availability)"
                },
                "vcf_sheet": {
                    "type": "string",
                    "fa_icon": "fas fa-file-code",
                    "pattern": "^\\S+\\.tsv$",
                    "description": "Specify a .tsv file containing the information about genomic variants (vcf files < v.4.2) for each sample.",
                    "help_text": "| Sample      | VCF_FileName           |\n| -------------| :---------------------:|\n| MM15_Melanom | data/MM15_variants.vcf |\n| MM17_Melanom | data/MM17_variants.vcf |"
                },
                "annotate_ions": {
                    "type": "boolean",
                    "default": "false",
                    "fa_icon": "fas fa-tags",
                    "description": "Set this option to create documents that are created to perform the ion annotation"
                }
            }
        },
        "fdr_scoring": {
            "title": "FDR Scoring",
            "type": "object",
            "fa_icon": "fas fa-star-half-stroke",
            "description": "",
            "default": "",
            "properties": {
                "fdr_level": {
                    "type": "string",
                    "fa_icon": "fas fa-rectangle-code",
                    "default": "peptide_level_fdrs",
                    "description": "Specify the level at which the false discovery rate should be computed.",
                    "enum": ["peptide_level_fdrs", "psm-level-fdrs", "protein_level_fdrs"]
                },
                "fdr_threshold": {
                    "type": "number",
                    "fa_icon": "fas fa-less-than",
                    "default": 0.01,
                    "description": "Specify the false discovery rate threshold at which peptide hits should be selected."
                },
                "refine_fdr_on_predicted_subset": {
                    "type": "boolean",
                    "fa_icon": "fas fa-arrows-repeat",
                    "help_text": "SubsetFDR makes use of binding predictions applying the tool mhcflurry to subset all PSMs not passing the q-value threshold. If specified the FDR will be refined using Percolator on the subset of predicted binders among all PSMs resulting in an increased identification rate. (Please be aware that this option is only available for MHC class I data of alleles that are supported by mhcflurry)",
                    "description": "Set if MHCquant should be run in SubsetFDR mode"
                },
                "subset_affinity_threshold": {
                    "type": "integer",
                    "fa_icon": "fas fa-pen",
                    "default": 500,
                    "description": "Affinity threshold (nM) used to define binders for PSM subset selection in the FDR refinement procedure"
                },
                "description_correct_features": {
                    "type": "integer",
                    "fa_icon": "fas fa-pen",
                    "description": "Specify percolator descriptor feature set",
                    "help_text": "See percolator description (https://github.com/percolator/percolator/wiki/Retention-time-and-calibration)"
                },
                "klammer": {
                    "type": "boolean",
                    "fa_icon": "fas fa-microchip",
                    "description": "Use klammer retention time features for Percolator rescoring",
                    "help_text": "https://pubs.acs.org/doi/10.1021/ac070262k"
                },
                "subset_max_train": {
                    "type": "integer",
                    "fa_icon": "fas fa-train-track",
                    "description": "Maximum subset for percolator training iterations"
                }
            }
        },
        "quantification_options": {
            "title": "Quantification Options",
            "type": "object",
            "fa_icon": "fas fa-tally",
            "description": "",
            "default": "",
            "properties": {
                "skip_quantification": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip quantification and only yield peptide identifications"
                },
                "quantification_fdr": {
                    "type": "string",
                    "fa_icon": "fas fa-less-than",
                    "description": "Compute FDR for the targeted approach",
                    "help_text": "(Weisser H. and Choudhary J.S. J Proteome Res. 2017 Aug 4)"
                },
                "quantification_min_prob": {
                    "type": "number",
                    "description": "Specify a cut off probability value for quantification events as a filter"
                }
            }
        },
        "mhc_affinity_prediction": {
            "title": "MHC affinity prediction",
            "type": "object",
            "fa_icon": "fas fa-magnifying-glass",
            "description": "",
            "default": "",
            "properties": {
                "allele_sheet": {
                    "type": "string",
                    "fa_icon": "fas fa-file-code",
                    "pattern": "^\\S+\\.tsv$",
                    "description": "Specify a .tsv file containing the MHC alleles of your probes as well as their metadata such as SampleID.",
                    "help_text": "| Sample      | HLA_Alleles_Class_1                             | HLA_Alleles_Class_2                        |\n| -------------| :----------------------------------------------:| ------------------------------------------:|\n| MM15_Melanom | `A*03:01;A*68:01;B*27:05;B*35:03;C*02:02;C*04:01` | `HLA-DRB1*01:01;HLA-DQB1*03:19;HLA-DQA1*05:01` |\n| MM17_Melanom | `A*02:01;B*07:01;B*26:01;C*11:01;C*01:01` | `HLA-DRB1*01:02;HLA-DRB3*02:02;HLA-DRB4*01:03` |\n"
                },
                "predict_class_1": {
                    "type": "boolean",
                    "fa_icon": "fas fa-circle-1",
                    "description": "Set flag depending on whether MHC class 1 binding predictions using the tool mhcflurry should be run."
                },
                "predict_class_2": {
                    "type": "boolean",
                    "fa_icon": "fas fa-circle-2",
                    "description": "Set flag depending on whether MHC class 2 binding predictions using the tool mhcnuggets should be run."
                }
            }
        },
        "variant_options": {
            "title": "Variant Options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "",
            "default": "",
            "properties": {
                "variant_reference": {
                    "type": "string",
                    "fa_icon": "fas fa-file",
                    "description": "Specify genomic reference used for variant annotation",
                    "enum": ["GRCH37", "GRCH38"],
                    "default": "GRCH38"
                },
                "variant_annotation_style": {
                    "type": "string",
                    "fa_icon": "fas fa-file",
                    "description": "Specify style of tool used for variant annotation - currently supported",
                    "enum": ["SNPEFF", "VEP", "ANNOVAR"],
                    "default": "SNPEFF"
                },
                "variant_indel_filter": {
                    "type": "boolean",
                    "fa_icon": "fas fa-filter",
                    "description": "Set this option to not consider insertions and deletions for variant translation",
                    "default": false
                },
                "variant_frameshift_filter": {
                    "type": "boolean",
                    "fa_icon": "fas fa-filter",
                    "description": "Set this option to not consider frameshifts for variant translation",
                    "default": false
                },
                "variant_snp_filter": {
                    "type": "boolean",
                    "fa_icon": "fas fa-filter",
                    "description": "Set this option to not consider snps for variant translation"
                }
            }
        },
        "rt_prediction": {
            "title": "RT Prediction",
            "type": "object",
            "fa_icon": "fas fa-timeline",
            "description": "",
            "default": "",
            "properties": {
                "predict_RT": {
                    "type": "boolean",
                    "fa_icon": "fas fa-wrench",
                    "description": "Set this option to predict retention times of all identified peptides and possible neoepitopes based on high scoring ids"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "skip_multiqc": {
                    "type": "boolean",
                    "description": "Skip MultiQC.",
                    "fa_icon": "fas fa-fast-forward",
                    "hidden": true,
                    "default": false
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^[\\d\\.]+\\s*.(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^[\\d\\.]+\\.*(s|m|h|d|day)$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, only MS Teams is supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "enable_conda": {
                    "type": "boolean",
                    "description": "Run this workflow with Conda. You can also use '-profile conda' instead of providing this parameter.",
                    "hidden": true,
                    "fa_icon": "fas fa-bacon"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/database_options"
        },
        {
            "$ref": "#/definitions/preprocessing"
        },
        {
            "$ref": "#/definitions/mass_spectrometry_data_processing"
        },
        {
            "$ref": "#/definitions/fdr_scoring"
        },
        {
            "$ref": "#/definitions/quantification_options"
        },
        {
            "$ref": "#/definitions/mhc_affinity_prediction"
        },
        {
            "$ref": "#/definitions/variant_options"
        },
        {
            "$ref": "#/definitions/rt_prediction"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
