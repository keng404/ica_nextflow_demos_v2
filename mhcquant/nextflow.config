/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/mhcquant Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {
    // Input options
    input                           = null
    outdir                          = null
    fasta                           = "data/*.fasta"

    // Workflow options
    allele_sheet                    = null
    include_proteins_from_vcf       = false
    predict_class_1                 = false
    predict_class_2                 = false
    refine_fdr_on_predicted_subset  = false
    skip_decoy_generation           = false
    subset_affinity_threshold       = 500
    variant_annotation_style        = "SNPEFF"
    variant_frameshift_filter       = false
    variant_indel_filter            = false
    variant_reference               = "GRCH38"
    variant_snp_filter              = false
    activation_method               = 'ALL'
    description_correct_features    = 0
    digest_mass_range               = "800:2500"
    enzyme                          = 'unspecific cleavage'
    fdr_threshold                   = 0.01
    fdr_level                       = 'peptide_level_fdrs'
    fixed_mods                      = ' '
    fragment_bin_offset             = 0
    fragment_mass_tolerance         = 0.02
    klammer                         = false
    max_rt_alignment_shift          = 300
    number_mods                     = 3
    num_hits                        = 1
    peptide_min_length              = 8
    peptide_max_length              = 12
    pick_ms_levels                  = 2
    predict_RT                      = false
    prec_charge                     = '2:3'
    precursor_mass_tolerance        = 5
    quantification_fdr              = null
    quantification_min_prob         = 0
    refine_fdr_on_predicted_subset  = false
    remove_precursor_peak           = false
    run_centroidisation             = false
    skip_quantification             = false
    spectrum_batch_size             = 500
    subset_max_train                = 0
    use_x_ions                      = false
    use_z_ions                      = false
    use_a_ions                      = false
    use_c_ions                      = false
    use_NL_ions                     = false
    variable_mods                   = 'Oxidation (M)'
    vcf_sheet                       = null
    annotate_ions                   = false

    // MultiQC options
    skip_multiqc                    = false
    multiqc_config                  = null
    multiqc_title                   = null
    multiqc_logo                    = null
    max_multiqc_email_size          = '25.MB'
    multiqc_methods_description     = null

    // Boilerplate options
    tracedir                        = "${params.outdir}/pipeline_info"
    publish_dir_mode                = 'copy'
    email                           = null
    email_on_fail                   = null
    plaintext_email                 = false
    monochrome_logs                 = false
    hook_url                        = null
    help                            = false
    validate_params                 = true
    show_hidden_params              = false
    schema_ignore_params            = 'genomes'
    enable_conda                    = false


    // Config options
    custom_config_version           = 'master'
    custom_config_base              = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description      = null
    config_profile_contact          = null
    config_profile_url              = null
    config_profile_name             = null


    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                      = '128.GB'
    max_cpus                        = 16
    max_time                        = '240.h'
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/mhcquant custom config
try {
    includeConfig "${params.custom_config_base}/pipeline/mhcquant.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config/mhcquant profiles: ${params.custom_config_base}/pipeline/mhcquant.config")
}

profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        params.enable_conda    = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    mamba {
        params.enable_conda    = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    podman {
        podman.enabled         = true
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    shifter {
        shifter.enabled        = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
    }
    charliecloud {
        charliecloud.enabled   = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 16
        executor.memory        = 60.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/mhcquant'
    author          = 'Leon Bichmann, Marissa Dubbelaar'
    homePage        = 'https://github.com/nf-core/mhcquant'
    description     = 'Identify and quantify peptides from mass spectrometry raw data'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=21.10.3'
    version         = '2.3.2dev'
    doi             = '10.1021/acs.jproteome.9b00313'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
