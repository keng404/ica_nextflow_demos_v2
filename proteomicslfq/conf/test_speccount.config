/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/proteomicslfq -profile test,<docker/singularity/podman>
 */

params {
  config_profile_name = 'Spectral Counting Quantification Method'
  config_profile_description = 'Minimal test dataset to check pipeline function using spectral counting'

  // Limit resources so that this can run on Travis
  max_cpus = 2
  max_memory = 6.GB
  max_time = 1.h

  // Input data
  input = [
    'https://raw.githubusercontent.com/nf-core/test-datasets/proteomicslfq/testdata/BSA1_F1.mzML',
    'https://raw.githubusercontent.com/nf-core/test-datasets/proteomicslfq/testdata/BSA1_F2.mzML',
    'https://raw.githubusercontent.com/nf-core/test-datasets/proteomicslfq/testdata/BSA2_F1.mzML',
    'https://raw.githubusercontent.com/nf-core/test-datasets/proteomicslfq/testdata/BSA2_F2.mzML',
    'https://raw.githubusercontent.com/nf-core/test-datasets/proteomicslfq/testdata/BSA3_F1.mzML',
    'https://raw.githubusercontent.com/nf-core/test-datasets/proteomicslfq/testdata/BSA3_F2.mzML'
  ]
  database = 'https://raw.githubusercontent.com/nf-core/test-datasets/proteomicslfq/testdata/18Protein_SoCe_Tr_detergents_trace_target_decoy.fasta'
  expdesign = 'https://raw.githubusercontent.com/nf-core/test-datasets/proteomicslfq/testdata/BSA_design.tsv'
  posterior_probabilities = "fit_distributions"
  quantification_method="spectral_counting"
  search_engines = "msgf"
  protein_level_fdr_cutoff = 1.0
  decoy_affix = "rev"
  enable_qc = true
}
