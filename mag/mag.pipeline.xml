<?xml version="1.0" encoding="utf-8"?>
<pipeline xmlns="xsd://www.illumina.com/ica/cp/pipelinedefinition" code="mag pipeline" version="1.0">
  <dataInputs>
    <dataInput code="input_files" format="UNKNOWN" type="FILE" required="false" multiValue="true">
      <label>input_files</label>
      <description>input files for pipeline.
All files will be staged in workflow.launchDir</description>
    </dataInput>
    <dataInput code="project_dir" format="UNKNOWN" type="DIRECTORY" required="true" multiValue="true">
      <label>project_dir</label>
      <description>directory with additional files/input to run pipeline --- other files in your github project</description>
    </dataInput>
  </dataInputs>
  <steps>
    <step execution="MANDATORY" code="input_output_options">
      <label>input_output_options</label>
      <description>input_output_options parameters</description>
      <tool code="input_output_options parameters">
        <label>input_output_options</label>
        <description>input_output_options parameters</description>
        <parameter code="input" minValues="1" maxValues="1" classification="USER">
          <label>input</label>
          <description>Input FastQ files or CSV samplesheet file containing information about the samples in the experiment.
Use this to specify the location of your input FastQ files. For example:

bash
--input 'path/to/data/sample_-_{1,2}.fastq.gz'
 

Alternatively, to assign different groups or to include long reads for hybrid assembly with metaSPAdes, you can specify a CSV samplesheet input file with 5 columns and the following header: sample,group,short_reads_1,short_reads_2,long_reads. See [usage docs](https://nf-co.re/mag/usage#input-specifications).</description>
          <stringType/>
          <value/>
        </parameter>
        <parameter code="single_end" minValues="1" maxValues="1" classification="USER">
          <label>single_end</label>
          <description>Specifies that the input is single-end reads.
By default, the pipeline expects paired-end data. If you have single-end data, you need to specify --single_end on the command line when you launch the pipeline. A normal glob pattern, enclosed in quotation marks, can then be used for --input. For example:

bash
--single_end --input '-.fastq'


It is not possible to run a mixture of single-end and paired-end files in one run.</description>
          <booleanType/>
          <value>false</value>
        </parameter>
        <parameter code="outdir" minValues="1" maxValues="1" classification="USER">
          <label>outdir</label>
          <description>The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.</description>
          <stringType/>
          <value/>
        </parameter>
        <parameter code="multiqc_title" minValues="1" maxValues="1" classification="USER">
          <label>multiqc_title</label>
          <description>MultiQC report title. Printed as page header, used for filename if not otherwise specified.</description>
          <stringType/>
          <value/>
        </parameter>
        <parameter code="config_profile_name" minValues="0" maxValues="1" classification="USER">
          <label>config_profile_name</label>
          <description>Configure params.config_profile_name</description>
          <stringType/>
          <value>'Full test profile'</value>
        </parameter>
        <parameter code="config_profile_description" minValues="0" maxValues="1" classification="USER">
          <label>config_profile_description</label>
          <description>Configure params.config_profile_description</description>
          <stringType/>
          <value>'Full test dataset to check pipeline function'</value>
        </parameter>
        <parameter code="host_fasta" minValues="0" maxValues="1" classification="USER">
          <label>host_fasta</label>
          <description>Configure params.host_fasta</description>
          <stringType/>
          <value>s3://nf-core-awsmegatests/mag/input_data/hg19_main_mask_ribo_animal_allplant_allfungus.fa.gz</value>
        </parameter>
        <parameter code="centrifuge_db" minValues="0" maxValues="1" classification="USER">
          <label>centrifuge_db</label>
          <description>Configure params.centrifuge_db</description>
          <stringType/>
          <value>s3://nf-core-awsmegatests/mag/input_data/p_compressed+h+v.tar.gz</value>
        </parameter>
        <parameter code="kraken2_db" minValues="0" maxValues="1" classification="USER">
          <label>kraken2_db</label>
          <description>Configure params.kraken2_db</description>
          <stringType/>
          <value>s3://nf-core-awsmegatests/mag/input_data/minikraken_8GB_202003.tgz</value>
        </parameter>
        <parameter code="cat_db" minValues="0" maxValues="1" classification="USER">
          <label>cat_db</label>
          <description>Configure params.cat_db</description>
          <stringType/>
          <value>s3://nf-core-awsmegatests/mag/input_data/CAT_prepare_20210107.tar.gz</value>
        </parameter>
        <parameter code="gtdb" minValues="0" maxValues="1" classification="USER">
          <label>gtdb</label>
          <description>Configure params.gtdb</description>
          <stringType/>
          <value>s3://nf-core-awsmegatests/mag/input_data/gtdbtk_r202_data.tar.gz</value>
        </parameter>
        <parameter code="spades_fix_cpus" minValues="0" maxValues="1" classification="USER">
          <label>spades_fix_cpus</label>
          <description>Configure params.spades_fix_cpus</description>
          <integerType/>
          <value>10</value>
        </parameter>
        <parameter code="spadeshybrid_fix_cpus" minValues="0" maxValues="1" classification="USER">
          <label>spadeshybrid_fix_cpus</label>
          <description>Configure params.spadeshybrid_fix_cpus</description>
          <integerType/>
          <value>10</value>
        </parameter>
        <parameter code="megahit_fix_cpu_1" minValues="0" maxValues="1" classification="USER">
          <label>megahit_fix_cpu_1</label>
          <description>Configure params.megahit_fix_cpu_1</description>
          <booleanType/>
          <value>true</value>
        </parameter>
        <parameter code="genome" minValues="1" maxValues="1" classification="USER">
          <label>genome</label>
          <description>Select Genome:</description>
          <optionsType>
            <option>GRCh37</option>
            <option>GRCh38</option>
            <option>GRCm38</option>
            <option>TAIR10</option>
            <option>EB2</option>
            <option>UMD3.1</option>
            <option>WBcel235</option>
            <option>CanFam3.1</option>
            <option>GRCz10</option>
            <option>BDGP6</option>
            <option>EquCab2</option>
            <option>EB1</option>
            <option>Galgal4</option>
            <option>Gm01</option>
            <option>Mmul_1</option>
            <option>IRGSP-1.0</option>
            <option>CHIMP2.1.4</option>
            <option>Rnor_5.0</option>
            <option>Rnor_6.0</option>
            <option>R64-1-1</option>
            <option>EF2</option>
            <option>Sbi1</option>
            <option>Sscrofa10.2</option>
            <option>AGPv3</option>
            <option>hg38</option>
            <option>hg19</option>
            <option>mm10</option>
            <option>bosTau8</option>
            <option>ce10</option>
            <option>canFam3</option>
            <option>danRer10</option>
            <option>dm6</option>
            <option>equCab2</option>
            <option>galGal4</option>
            <option>panTro4</option>
            <option>rn6</option>
            <option>sacCer3</option>
            <option>susScr3</option>
          </optionsType>
          <value>GRCh38</value>
        </parameter>
        <parameter code="ica_smoke_test" minValues="0" maxValues="1" classification="USER">
          <label>ica_smoke_test</label>
          <description>Boolean to trigger smoke test:</description>
          <booleanType/>
          <value>false</value>
        </parameter>
      </tool>
    </step>
  </steps>
</pipeline>
