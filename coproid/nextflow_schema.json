{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/coproid/master/nextflow_schema.json",
    "title": "nf-core/coproid pipeline parameters",
    "description": "Coprolite Identification",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "reads": {
                    "type": "string",
                    "description": "Path to fastq input files"
                },
                "krakendb": {
                    "type": "string",
                    "description": "path/to/kraken2_db_dir"
                },
                "sp_labels": {
                    "type": "string",
                    "default": "/Users/maxime/Documents/github/coproid/data/sourcepredict/modern_gut_microbiomes_labels.csv",
                    "description": "Path to sourcepredict labels file"
                },
                "sp_sources": {
                    "type": "string",
                    "default": "/Users/maxime/Documents/github/coproid/data/sourcepredict/modern_gut_microbiomes_sources.csv",
                    "description": "Path to sourcepredict sources file"
                },
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                }
            },
            "required": [
                "reads"
            ]
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for the reference genome indices used to align reads.",
            "properties": {
                "igenomes_base": {
                    "type": "string",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "name1": {
                    "type": "string",
                    "description": "Name of candidate species 1"
                },
                "name2": {
                    "type": "string",
                    "description": "Name of candidate species 2"
                },
                "name3": {
                    "type": "string",
                    "description": "Name of candidate species 3"
                },
                "genome1": {
                    "type": "string",
                    "description": "iGenome name for target genome 1",
                    "help_text": "Must be provided if fasta1 is not provided"
                },
                "genome2": {
                    "type": "string",
                    "description": "iGenome name for target genome 2",
                    "help_text": "Must be provided if fasta2 is not provided"
                },
                "genome3": {
                    "type": "string",
                    "description": "iGenome name for target genome 3",
                    "help_text": "Must be provided if fasta3 is not provided"
                },
                "index1": {
                    "type": "string",
                    "description": "Path to Bowtie2 pre-indexed genome candidate 1"
                },
                "index2": {
                    "type": "string",
                    "description": "Path to Bowtie2 pre-indexed genome candidate 2"
                },
                "index3": {
                    "type": "string",
                    "description": "Path to Bowtie2 pre-indexed genome candidate 3"
                },
                "fasta1": {
                    "type": "string",
                    "description": "Fasta reference of  genome candidate 1",
                    "help_text": "Must be provided if genome1 is not provided"
                },
                "fasta2": {
                    "type": "string",
                    "description": "Fasta reference of  genome candidate 2",
                    "help_text": "Must be provided if genome2 is not provided"
                },
                "fasta3": {
                    "type": "string",
                    "description": "Fasta reference of  genome candidate 3",
                    "help_text": "Must be provided if genome3 is not provided"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true,
                    "help_text": "This works exactly as with `--email`, except emails are only sent if the workflow is not successful."
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true,
                    "help_text": "Set to receive plain-text e-mails instead of HTML formatted."
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true,
                    "help_text": "If file generated by pipeline exceeds the threshold, it will not be attached."
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true,
                    "help_text": "Set to disable colourful command line output and live life in monochrome."
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of pipeline run"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested    for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog",
                    "help_text": "Provide git commit id for custom Institutional configs hosted at `nf-core/configs`. This was implemented for reproducibility purposes. Default: `master`.\n\n```bash\n## Download and use config file with following git commit id\n--custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96\n```"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell nextflow where to find them with the `custom_config_base` option. For example:\n\n```bash\n## Download and unzip the config files\ncd /path/to/my/configs\nwget https://github.com/nf-core/configs/archive/master.zip\nunzip master.zip\n\n## Run the pipeline\ncd /path/to/my/data\nnextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/\n```\n\n> Note that the nf-core/tools helper package has a `download` command to download all required pipeline files + singularity containers + institutional configs in one go for you, to make this process easier.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "pipeline_parameters": {
            "title": "Pipeline parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "single_end": {
                    "type": "boolean",
                    "description": "Specifies that the input is single-end reads.",
                    "fa_icon": "fas fa-align-center",
                    "help_text": "By default, the pipeline expects paired-end data. If you have single-end data, you need to specify `--single_end` on the command line when you launch the pipeline. A normal glob pattern, enclosed in quotation marks, can then be used for `--input`. For example:\n\n```bash\n--single_end --input '*.fastq'\n```\n\nIt is not possible to run a mixture of single-end and paired-end files in one run."
                },
                "collapse": {
                    "type": "string",
                    "default": "true",
                    "description": "Specifies if AdapterRemoval should merge the paired-end sequences or not."
                },
                "phred": {
                    "type": "integer",
                    "default": 33,
                    "description": "Phred quality encoding",
                    "enum": [
                        33,
                        64
                    ]
                },
                "identity": {
                    "type": "number",
                    "default": 0.95,
                    "description": "Identity threshold to retain read alignment."
                },
                "adna": {
                    "type": "string",
                    "default": "true",
                    "description": "Specifies if data is modern (false) or ancient DNA (true)."
                },
                "pmdscore": {
                    "type": "integer",
                    "default": 3,
                    "description": "Minimum PMDscore to retain read alignment."
                },
                "library": {
                    "type": "string",
                    "default": "classic",
                    "description": "DNA preparation library type",
                    "enum": [
                        "classic",
                        "UDGhalf"
                    ]
                },
                "bowtie": {
                    "type": "string",
                    "default": "very-sensitive",
                    "description": "Bowtie settings for sensivity",
                    "enum": [
                        "very-fast",
                        "very-sensitive"
                    ]
                },
                "minKraken": {
                    "type": "integer",
                    "default": 50,
                    "description": "Minimum number of Kraken hits per Taxonomy ID to report"
                },
                "endo1": {
                    "type": "number",
                    "default": 0.01,
                    "description": "Proportion of Endogenous DNA in organism 1 target microbiome",
                    "minimum": 0,
                    "maximum": 1
                },
                "endo2": {
                    "type": "number",
                    "default": 0.01,
                    "description": "Proportion of Endogenous DNA in organism 2 target microbiome",
                    "minimum": 0,
                    "maximum": 1
                },
                "endo3": {
                    "type": "number",
                    "default": 0.01,
                    "description": "Proportion of Endogenous DNA in organism 3 target microbiome"
                },
                "sp_norm": {
                    "type": "string",
                    "default": "gmpr",
                    "description": "Sourcepredict normalization method"
                },
                "sp_dim": {
                    "type": "integer",
                    "default": 2,
                    "description": "Sourcepredict number of embedding dimenstions"
                },
                "sp_embed": {
                    "type": "string",
                    "default": "mds",
                    "description": "Sourcepredict embedding method"
                },
                "sp_neighbors": {
                    "type": "string",
                    "default": "all",
                    "description": "Sourcepredict number of neighbours"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/pipeline_parameters"
        }
    ]
}